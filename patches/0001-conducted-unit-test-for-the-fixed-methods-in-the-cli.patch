From 75da8f2f74c3362d8db53f00cfc13b859c6b8ae4 Mon Sep 17 00:00:00 2001
From: Sriram2828 <sriram101110001@gmail.com>
Date: Thu, 27 Jun 2024 22:37:31 +0530
Subject: [PATCH] conducted unit-test for the fixed methods in the client3.py

---
 client_test.py | 32 ++++++++++++++++++++++++++++----
 1 file changed, 28 insertions(+), 4 deletions(-)

diff --git a/client_test.py b/client_test.py
index af2bf26..67ded36 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,24 +1,48 @@
 import unittest
-from client3 import getDataPoint
+from client3 import getDataPoint, getRatio
 
 class ClientTest(unittest.TestCase):
+  """ ------------ unit test for getDataPoint() method ------------ """
   def test_getDataPoint_calculatePrice(self):
     quotes = [
       {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
-    """ ------------ Add the assertion below ------------ """
+    """ ------------ Assertion is added below for the testing process ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price']) / 2))
+
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
       {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
-    """ ------------ Add the assertion below ------------ """
+    """ ------------ Assertion is added below for the testing process ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price']) / 2))
+
 
+  """ ------------ unit test for getRatio() method ------------ """
+  def test_getRatio_calculateRatio(self):
+    # price_A = [117.38, 118.95]
+    # price_B = [116.325, 117.445]
+    # result = [1.0090694175800559, 1.0128145089190685]
+    testUnits = [
+      {'priceA': 117.38, 'priceB': 116.325, 'ratio': 1.0090694175800559},
+      {'priceA': 118.95, 'priceB': 117.445, 'ratio': 1.0128145089190685}
+    ]
+    for unit in testUnits:
+      self.assertEqual(getRatio(unit['priceA'],unit['priceB']), unit['ratio'])
 
-  """ ------------ Add more unit tests ------------ """
 
+  def test_getRatio_calculateRatioPriceAandBareZero(self):
+    testUnits = [
+      {'priceA': 117.38, 'priceB': 0, 'ratio': None},
+      {'priceA': 0, 'priceB': 117.38, 'ratio': 0}
+    ]
+    for unit in testUnits:
+      self.assertEqual(getRatio(unit['priceA'],unit['priceB']), unit['ratio'])
 
 
 if __name__ == '__main__':
-- 
2.41.0.windows.1

